---
- hosts: localhost 
  gather_facts: false
  name: Configure ONTAP Select 
  vars:
    https: true
    validate_certs: false
    site_node_name: "{{ site_cluster }}-01"
    site_aggr_name: "aggr1"
    site_data_vol: "IoT_Data"
    site_login: &site_login
      hostname: '{{ site_address }}'
      username: admin
      password: '{{ site_password }}'  
      https: true
      validate_certs: no 
    core_aggr_name: "aggr2"
    core_login: &core_login
      hostname: '{{ core_address }}'
      username: admin
      password: '{{ core_password }}'  
      https: true
      validate_certs: no 
  vars_files: 
    - vars-site.yml
    - vars-core.yml
  tasks:
  - name: Create Data Aggregate 
    na_ontap_aggregate:
      <<: *site_login
      state: present
      service_state: online
      name: aggr1
      disk_count: 1
      wait_for_online: True
      time_out: 300
  - name: Create SVM
    na_ontap_svm:
      <<: *site_login
      state: present
      name: "{{ site_svm_name }}"
      root_volume: "{{ site_svm_name }}_root"
      root_volume_aggregate: "{{ site_aggr_name }}"
      root_volume_security_style: unix
  - name: Create interface
    na_ontap_interface:
      <<: *site_login
      state: present
      interface_name: "{{ site_svm_name }}_lif1"
      home_port: e0a
      home_node: "{{ site_node_name }}"
      role: data
      protocols: nfs,cifs
      admin_status: up
      failover_policy: local-only
      firewall_policy: mgmt-nfs
      is_auto_revert: true
      address: "{{ site_svm_address }}"
      netmask: "{{ site_netmask }}"
      vserver: "{{ site_svm_name }}"
  - name: create route
    na_ontap_net_routes:
      <<: *site_login
      state: present
      vserver: "{{ site_svm_name }}"
      destination: 0.0.0.0/0
      gateway: "{{ site_gateway }}"
      metric: "20"
  - name: Enable nfs 
    na_ontap_nfs:
      <<: *site_login
      state: present
      service_state: started
      vserver: "{{ site_svm_name }}"
      nfsv3: enabled
      nfsv4: disabled
      nfsv41: disabled
      tcp: enabled
      udp: enabled
      vstorage_state: enabled
  - name: Setup default rules
    na_ontap_export_policy_rule:
      <<: *site_login
      state: present
      policy_name: default
      vserver: "{{ site_svm_name }}"
      rule_index: 1 
      client_match: 0.0.0.0/0
      ro_rule: any
      rw_rule: any
      super_user_security: any
  - name: create DNS
    na_ontap_dns:
      <<: *site_login
      state: present
      vserver: "{{ site_svm_name }}" 
      domains: "{{ site_dns_domain }}"
      nameservers: "{{ site_dns_server }}"
      skip_validation: true 
  - name: Create Site Volume 
    na_ontap_volume: 
      <<: *site_login
      state: present 
      name: "{{ site_data_vol }}"
      aggregate_name: "{{ site_aggr_name }}" 
      size: "40" 
      size_unit: gb 
      space_guarantee: none
      volume_security_style: unix
      junction_path: "/{{ site_data_vol }}"
      vserver: "{{ site_svm_name }}"
  - name: Create intercluster interface
    na_ontap_interface:
      <<: *site_login
      state: present
      interface_name: "{{ site_node_name }}_ic1"
      home_port: e0a
      home_node: "{{ site_node_name }}"
      role: intercluster
      admin_status: up
      failover_policy: local-only
      firewall_policy: intercluster
      is_auto_revert: true
      address: "{{ site_ic1_address }}"
      netmask: "{{ site_netmask }}"
      vserver: "{{ site_cluster }}"
  - name: Create cluster peer
    na_ontap_cluster_peer:
      <<: *site_login
      state: present
      source_intercluster_lifs: "{{ site_ic1_address }}"
      dest_intercluster_lifs: "{{ core_ic1_address }}"
      passphrase: "{{ site_password }}"
      dest_hostname: "{{ core_address }}"
  - name: Source vserver peer create
    na_ontap_vserver_peer:
      <<: *site_login
      state: present
      peer_vserver: "{{ core_svm }}"
      peer_cluster: "{{ core_cluster }}"
      vserver: "{{ site_svm_name }}"
      applications: snapmirror,flexcache
      dest_hostname: "{{ core_address }}"
  - name: Create FlexCache Distribution_cache
    na_ontap_flexcache:
      <<: *site_login
      state: present
      origin_volume: "Distribution"
      volume: "Distribution_cache"
      origin_vserver: "{{ core_svm }}"
      vserver: "{{ site_svm_name }}"
      junction_path: "/Distribution_cache"
  - name: Create FlexCache Site_cache
    na_ontap_flexcache:
      <<: *core_login
      state: present
      origin_volume: "IoT_Data"
      volume: "{{ site_name }}_cache"
      origin_vserver: "{{ site_svm_name }}"
      vserver: "{{ core_svm }}"
      junction_path: "/Sites_cache/{{ site_name }}"
  - name: Create Snapmirror Volume 
    na_ontap_volume: 
      <<: *core_login
      state: present 
      name: "{{ site_name }}_mirror"
      aggregate_name: "{{ core_aggr_name }}" 
      type: "DP"
      size: "40" 
      size_unit: gb 
      space_guarantee: none
      volume_security_style: unix
      vserver: "{{ core_svm }}"
  - name: Create ONTAP/ONTAP SnapMirror
    na_ontap_snapmirror:
      <<: *core_login
      state: present
      source_volume: "IoT_Data"
      destination_volume: "{{ site_name }}_mirror"
      source_vserver: "{{ site_svm_name }}"
      destination_vserver: "{{ core_svm }}"
      schedule: hourly
      policy: MirrorAllSnapshots
  - name: Mount Snapmirror Volume 
    na_ontap_volume: 
      <<: *core_login
      state: present 
      name: "{{ site_name }}_mirror"
      aggregate_name: "{{ core_aggr_name }}" 
      type: "DP"
      size: "40" 
      size_unit: gb 
      space_guarantee: none
      volume_security_style: unix
      junction_path: "/Sites_copy/{{ site_name }}"
      vserver: "{{ core_svm }}"
    retries: 30
    delay: 60
    register: result           
    until: result is succeeded 

